syntax = "proto3";

package Contracts.Services.Catalog.Protobuf;

import "Abstractions/Abstractions.proto";

service CatalogService {
  rpc ListCatalogsGridItems(ListCatalogsGridItemsRequest) returns (CatalogsGridItemsPagedResponse);
  rpc ListCatalogItemsListItems(ListCatalogItemsListItemsRequest) returns (CatalogItemsListItemsPagedResponse);
  rpc ListCatalogItemsCards(ListCatalogItemsCardsRequest) returns (CatalogItemsCardsPagedResponse);
  rpc GetCatalogItemDetails(GetCatalogItemDetailsRequest) returns (CatalogItemDetailsResponse);
}

// Catalogs - GridItems

message ListCatalogsGridItemsRequest {
  Abstractions.Protobuf.Paging Paging = 1;
}

message CatalogsGridItemsPagedResponse {
  oneof Response{
    CatalogGridItems CatalogGridItems = 1;
    Abstractions.Protobuf.NoContent NoContent = 2;
  }
}

message CatalogGridItems {
  repeated CatalogGridItem Items = 1;
  Abstractions.Protobuf.Page Page = 2;
}

message CatalogGridItem {
  string CatalogId = 1;
  string Title = 2;
  string Description = 3;
  string ImageUrl = 4;
  bool IsActive = 5;
}

// CatalogItems - ListItems

message ListCatalogItemsListItemsRequest {
  string CatalogId = 1;
  Abstractions.Protobuf.Paging Paging = 2;
}

message CatalogItemsListItemsPagedResponse {
  oneof Response{
    CatalogListItems CatalogListItems = 1;
    Abstractions.Protobuf.NoContent NoContent = 2;
  }
}

message CatalogListItems {
  repeated CatalogItemListItem Items = 1;
  Abstractions.Protobuf.Page Page = 2;
}

message CatalogItemListItem {
  string CatalogId = 1;
  string ItemId = 2;
  string ProductName = 3;
}

// CatalogItems - Cards

message ListCatalogItemsCardsRequest {
  string CatalogId = 1;
  Abstractions.Protobuf.Paging Paging = 2;
}

message CatalogItemsCardsPagedResponse {
  oneof Response{
    CatalogItemsCards CatalogItemCards = 1;
    Abstractions.Protobuf.NoContent NoContent = 2;
  }
}

message CatalogItemsCards {
  repeated CatalogItemCard Items = 1;
  Abstractions.Protobuf.Page Page = 2;
}

message CatalogItemCard {
  string CatalogId = 1;
  string ItemId = 2;
  Abstractions.Protobuf.Product Product = 3;
  string Description = 4;
  string ImageUrl = 5;
  string UnitPrice = 6;
}

// CatalogItem - Details

message GetCatalogItemDetailsRequest {
  string CatalogId = 1;
  string ItemId = 2;
}

message CatalogItemDetailsResponse{
  oneof Response{
    CatalogItemDetails CatalogItemDetails = 1;
    Abstractions.Protobuf.NotFound NotFound = 2;
  }
}

message CatalogItemDetails {
  string CatalogId = 1;
  string ItemId = 2;
  string Description = 3;
  string ImageUrl = 4;
  Abstractions.Protobuf.Product Product = 5;
  string UnitPrice = 6;
}