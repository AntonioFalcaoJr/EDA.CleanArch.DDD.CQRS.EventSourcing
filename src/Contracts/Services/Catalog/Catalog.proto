syntax = "proto3";

package Contracts.Services.Catalog.Protobuf;

service CatalogService {
  rpc ListCatalogsGridItems(ListCatalogsGridItemsRequest) returns (CatalogsGridItems);
  rpc ListCatalogItemsListItems(ListCatalogItemsListItemsRequest) returns (CatalogItemsListItems);
  rpc ListCatalogItemsCards(ListCatalogItemsCardsRequest) returns (CatalogItemsCards);
  rpc GetCatalogItemDetails(GetCatalogItemDetailsRequest) returns (CatalogItemDetails);
}

message ListCatalogsGridItemsRequest {
  sint32 Limit = 1;
  sint32 Offset = 2;
}

message ListCatalogItemsListItemsRequest {
  string CatalogId = 1;
  sint32 Limit = 2;
  sint32 Offset = 3;
}

message ListCatalogItemsCardsRequest {
  string CatalogId = 1;
  sint32 Limit = 2;
  sint32 Offset = 3;
}

message GetCatalogItemDetailsRequest {
  string CatalogId = 1;
  string ItemId = 2;
}

message CatalogsGridItems {
  repeated CatalogGridItem Items = 1;
  Page Page = 2;
}

message CatalogGridItem {
  string CatalogId = 1;
  string Title = 2;
  string Description = 3;
  string ImageUrl = 4;
  bool IsActive = 5;
}

message CatalogItemsListItems {
  repeated CatalogItemListItem Items = 1;
  Page Page = 2;
}

message CatalogItemListItem {
  string CatalogId = 1;
  string ItemId = 2;
  string ProductName = 3;
}

message CatalogItemsCards {
  repeated CatalogItemCard Items = 1;
  Page Page = 2;
}

message CatalogItemCard {
  string CatalogId = 1;
  string ItemId = 2;
  Product Product = 3;
  string Description = 4;
  string ImageUrl = 5;
  string Price = 6;
}

message CatalogItemDetails {
  string CatalogId = 1;
  string ItemId = 2;
  string Description = 3;
  string ImageUrl = 4;
  Product Product = 5;
  string Price = 6;
}

message Product {
  string Description = 1;
  string Name = 2;
  string Brand = 4;
  string Category = 5;
  string Unit = 6;
  string Sku = 7;
}

message Page{
  int32 Current = 1;
  int32 Size = 2;
  bool HasNext = 3;
  bool HasPrevious = 4;
}